peakgranges <- importIntoEnv("LMS_ChIPseq_short-master-2023-final/course/data/macsPeaksAsBed/mycmelrep1_peaks.bed","LMS_ChIPseq_short-master-2023-final/course/data/macsPeaksAsBed/mycmelrep1_peaks.bed")
library(GenomicRanges)
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- head(common_peakset, n=500)
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
top_500 <- common_peakset[1:500]
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
library(BSgenome.Mmusculus.UCSC.mm9)
library(BSgenome.Mmusculus.UCSC.mm10)
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm10)
library(BSgenome.Mmusculus.UCSC.mm9)
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(BSgenome.Mmusculus.UCSC.mm9)
BiocManager::install(BSgenome.Mmusculus.UCSC.mm9)
BiocManager::install(BSgenome.Mmusculus.UCSC.mm9)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BSgenome")
BiocManager::install(BSgenome.Mmusculus.UCSC.mm9)
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
BiocManager::install("BSgenome.Mmusculus.UCSC.mm9")
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonPeaksSequences,file="consensusPeaks.fa")
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
BiocManager::install("BSgenome")
BiocManager::install("BSgenome.Mmusculus.UCSC.mm9")
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonPeaks),"_",
start(commonPeaks),
"-",
end(commonPeaks))
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonPeaks),"_",
start(commonPeaks),
"-",
end(commonPeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
BiocManager::install("BSgenome")
BiocManager::install("BSgenome.Mmusculus.UCSC.mm9")
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonPeaks),"_",
start(commonPeaks),
"-",
end(commonPeaks))
#BiocManager::install("BSgenome")
#BiocManager::install("BSgenome.Mmusculus.UCSC.mm9")
#library(BSgenome)
#library(BSgenome.Mmusculus.UCSC.mm9)
#genome <- BSgenome.Mmusculus.UCSC.mm9
#seqlevelsStyle(commonpeaks) <- "UCSC"
#commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
peakfile1 <- "LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls"
peakset1 <- ChIPQC:::GetGRanges(peakfile, sep="\t", simple=F)
peakfile2 <- "LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls"
peakset2 <- ChIPQC:::GetGRanges(peakfile, sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- peakset1[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
head(common_peakset)
dupplicated_seq <- duplicated(commonpeaksequences)
unique_sequences <- commonpeaksequences[!dupplicated_seq]
writeXStringSet(unique_sequences,file="consensusPeaks.fa")
writeXStringSet(unique_sequences,file="consensusPeaks.fa")
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
length(common_peakset)
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- peakset1[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- peakset1[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
length(common_peakset)
length(commonpeaks)
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
length(common_peakset)
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
common_peakset
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
common_peakset
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500,]
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
common_peakset
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500,]
common_peakset[1:500]
peakfile1 <- "LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls"
peakset1 <- ChIPQC:::GetGRanges(peakfile, sep="\t", simple=F)
peakfile2 <- "LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls"
peakset2 <- ChIPQC:::GetGRanges(peakfile, sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- peakset1[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
head(common_peakset)
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
peakfile1 <- "LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls"
peakset1 <- ChIPQC:::GetGRanges(peakfile, sep="\t", simple=F)
peakfile2 <- "LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls"
peakset2 <- ChIPQC:::GetGRanges(peakfile, sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
head(common_peakset)
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
head(common_peakset)
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
head(common_peakset)
common_peakset
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
allpeaksreduced
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
common_peakset
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
common_peakset <- allpeaks[allpeaks %over% peakset1
& allpeaks %over% peakset2]
common_peakset
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
common_peakset <- allpeaks[allpeaks %over% peakset1
& allpeaks %over% peakset2]
common_peakset
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
common_peakset <- common_peakset[rev(order(common_peakset$fold_enrichment))]
common_peakset
top_500 <- common_peakset[1:500]
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
allpeaks <- rbind(peakset1,peakset2)
allpeaks <- c(peakset1,peakset2)
common_peakset <- allpeaks[allpeaks %over% peakset1
& allpeaks %over% peakset2]
common_peakset
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
allpeaksreduced
only_ps1 <- peakset1[!peakset1 %over% peakset2]
ps1_AND_ps2 <- peakset1[peakset1 %over% peakset2]
length(only_ps1)
length(ps1_AND_ps2)
ps1_AND_ps2 <- peakset1[peakset1 %over% peakset2]
ps2_AND_ps1 <- peakset2[peakset2 %over% peakset1]
length(ps1_AND_ps2)
length(ps2_AND_ps1)
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
only_ps1 <- peakset1[!peakset1 %over% peakset2]
ps1_AND_ps2 <- peakset1[peakset1 %over% peakset2]
length(only_ps1)
length(ps1_AND_ps2)
ps1_AND_ps2 <- peakset1[peakset1 %over% peakset2]
ps2_AND_ps1 <- peakset2[peakset2 %over% peakset1]
length(ps1_AND_ps2)
length(ps2_AND_ps1)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
allpeaksreduced
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
common_peakset
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
common_peakset
common_peakset
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
common_peakset
allpeaks
allpeaks <- c(peakset1,peakset2)
allpeaks
allpeaks <- c(peakset1,peakset2)
allpeaks
allpeaks <- allpeaks[rank(allpeaks$fold_enrichment)]
allpeaks
allpeaks <- allpeaks[rev(rank(allpeaks$fold_enrichment))]
allpeaks
foldEnrichment <- only_ps1$fold_enrichment
# or foldEnrichment <- firstPeakSet[,"fold_enrichment"]
foldEnrichment[1:10]
length(common_peakset)
library(TxDb.Mmusculus.UCSC.mm9.knownGene)
library(org.Mm.eg.db)
library(GenomeInfoDb)
library(ChIPseeker)
library(org.Mm.eg.db)
library(GenomeInfoDb)
library(ChIPseeker)
BiocManager::install(ChIPseeker)
BiocManager::install("ChIPseeker")
library(ChIPseeker)
common_peakset[1:2,]
common_peakset[1:2,]
common_peakset[1:500,]
common_peakset <- common_peakset[rev(rank(common_peakset$fold_enrichment))]
common_peakset
allpeaksreduced
allpeaks
allpeaks <- c(peakset1,peakset2)
allpeaks
allpeaks
allpeaks <- allpeaks[rev(order(allpeaks$fold_enrichment))]
allpeaks
allpeaks_ordered <- allpeaks[order(allpeaks$fold_enrichment)]
allpeaks_ranked <- allpeaks[rev(ran)]
allpeaks_ordered
allpeaks_ranked <- allpeaks_ordered[rank(allpeaks_ordered$fold_enrichment)]
allpeaks_ranked
allpeaks_ranked <- allpeaks_ordered[rev(rank(allpeaks_ordered$fold_enrichment))]
allpeaks_ranked
top_500 <- allpeaks_ranked[1:500]
top_500
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
commonpeaksreduced <- reduce(commonpeaks)
commonpeaksreduced
allpeaks_ranked
top_500 <- allpeaks_ranked[1:500]
top_500
allpeaks
allpeaks_ordered <- allpeaks[order(allpeaks$fold_enrichment)]
allpeaks_ordered
allpeaks
allpeaks_ranked <- allpeaks_ordered[rev(rank(allpeaks_ordered$fold_enrichment))]
allpeaks_ranked
commonpeaksreduced <- reduce(allpeaks_ranked)
commonpeaksreduced
top_500 <- commonpeaksreduced[1:500]
top_500
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
library(BSgenome)
library(BSgenome.Mmusculus.UCSC.mm9)
genome <- BSgenome.Mmusculus.UCSC.mm9
seqlevelsStyle(commonpeaks) <- "UCSC"
commonpeaksequences <- getSeq(genome,GRanges(commonpeaks))
names(commonpeaksequences) <-  paste0("peak_",seqnames(commonpeaks),"_",
start(commonpeaks),
"-",
end(commonpeaks))
commonpeaksequences[1:2]
writeXStringSet(commonpeaksequences,file="consensusPeaks.fa")
peakset1 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep1_peaks.xls", sep="\t", simple=F)
peakset2 <- ChIPQC:::GetGRanges("LMS_ChIPseq_short-master-2023-final/course/data/MacsPeaks/mycmelrep2_peaks.xls", sep="\t", simple=F)
allpeaks <- c(peakset1,peakset2)
allpeaksreduced <- reduce(allpeaks)
allpeaksreduced
common_peakset <- allpeaksreduced[allpeaksreduced %over% peakset1
& allpeaksreduced %over% peakset2]
length(common_peakset)
common_peakset[1:500,]
library(ggplot2)
ggplot(mtcars, aes(x= as.factor(gear),y=mpg))+
geom_boxplot(aes(fill=as.factor(gear)))+
labs(title="Miles per gallon as a function of the number of gears", x="Number of gears", y="Miles per gallon")
allpeaks <- c(peakset1,peakset2)
allpeaks
allpeaks_ranked <- allpeaks[rev(rank(allpeaks$fold_enrichment))]
allpeaks_ranked
allpeaks_ranked
commonpeaksreduced <- reduce(allpeaks_ranked)
allpeaks_ranked <- allpeaks[rev(ordered(allpeaks$fold_enrichment))]
allpeaks_ranked <- allpeaks[rev(ordered(allpeaks$fold_enrichment))]
allpeaks_ranked <- allpeaks[ordered(allpeaks$fold_enrichment)]
allpeaks_ranked <- ordered(allpeaks$fold_enrichment)
allpeaks_ranked
allpeaks[
allpeaks_ranked <- allpeaks[ordered(allpeaks$fold_enrichment)]
allpeaks_ranked
allpeaks_ranked <- allpeaks[rev(order(allpeaks$fold_enrichment))]
allpeaks_ranked
commonpeaksreduced <- reduce(allpeaks_ranked)
commonpeaksreduced
top_500 <- commonpeaksreduced[1:500]
top_500
commonpeaks <- resize(top_500,200,fix="center")
commonpeaks
n <- 12
fibonacci <- numeric(n)
fibonacci[1] <- 1
fibonacci[2] <- 1
for (i in 3:n)
fibonacci[f] <- fibonacci[f-1]+fibonacci[f-2]
n <- 12
fibonacci <- numeric(n)
fibonacci[1] <- 1
fibonacci[2] <- 1
for (f in 3:n)
fibonacci[f] <- fibonacci[f-1]+fibonacci[f-2]
print(fibonacci)
n <- 12
fibonacci <- numeric(n)
fibonacci[1] <- 1
fibonacci[2] <- 1
for (f in 3:n)
fibonacci[f] <- fibonacci[f-1]+fibonacci[f-2]
print(fibonacci)
library(ggplot2)
ggplot(mtcars, aes(x= as.factor(gear)[names(legend)],y=mpg))+
geom_boxplot(aes(fill=as.factor(gear)))+
labs(title="Miles per gallon as a function of the number of gears", x="Number of gears", y="Miles per gallon")
library(ggplot2)
ggplot(mtcars, aes(x= as.factor(gear),y=mpg))+
geom_boxplot(aes(fill=as.factor(gear)))+
labs(title="Miles per gallon as a function of the number of gears", x="Number of gears", y="Miles per gallon")
knitr::opts_chunk$set(echo = TRUE)
#The head command was used to determine and explore the data set with its corresponding variables.
head(cars, 5)
#The linear_model variable is created from the lm function of the distance proportional to the speed.
linear_model <- lm(formula = dist ~ speed, data=cars)
#This line provides the summary of the coefficients in the linear_model variable.
summary(linear_model)$coefficients
#The Y intercept of the line has a value of -17.579095 whereas the fitted slope of the breaking distance has a value of 3.932409.
#The standard error for the Y intercept is 6.7584402 whereas the fitted slope of the breaking distance has a standard error value of 0.4155128.
#The units for the speed variable is in miles per hour (mph) whereas the units used for the breaking distant variable is in feet (ft).
